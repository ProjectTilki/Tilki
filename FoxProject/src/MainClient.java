import java.awt.Color;
import java.awt.Component;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.ListModel;
import javax.swing.UIManager;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates and open the template
 * in the editor.
 */
/**
 *
 * @author talha, gorkem, baturay
 */
public class MainClient extends javax.swing.JFrame {
    private Exam[] examList;
    private CaptureDesktop cam;
    private String number;
    private String name;
    private String surname;
    private String instructorKey;
    private static ZipAndUpload zau;
    private FoxClientUtilities fcu = new FoxClientUtilities();
    private Color c = new Color(26, 126, 36);

    /**
     *
     * Creates new form MainClient
     */
    public MainClient() {

        initComponents();

        ImageIcon img = new ImageIcon("fox.png");
        setIconImage(img.getImage());
        setLocationRelativeTo(null);

        try {
            examList = fcu.availableExams();
            jList1.setModel(new ExamListModel(examList));
            durumLabel.setText("Ba\u011Fland\u0131.");
            durumLabel.setForeground(c);
            durumLabel.setVisible(true);
        }catch(IOException e) {
            examList = null;
            jList1.setModel(new ExamListModel(examList));
            durumLabel.setText("Ba\u011Flanamad\u0131.");
            durumLabel.setVisible(true);
            durumLabel.setForeground(Color.red);
        }catch(ClassNotFoundException e) {
            examList = null;
            durumLabel.setText("Eksik dosya.");
            durumLabel.setVisible(true);
            durumLabel.setForeground(Color.red);
        }
        jList1.setModel(new ExamListModel(examList));
        jTextArea1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooserFrame = new javax.swing.JFrame();
        jFileChooser1 = new javax.swing.JFileChooser();
        jProgressBar2 = new javax.swing.JProgressBar();
        GirisEkrani = new javax.swing.JPanel();
        SolPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        surnameTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        idTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        loginLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        keyField = new javax.swing.JPasswordField();
        keyLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        SagPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        yenileButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        durumLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        VideoKayitEkrani = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();

        FileChooserFrame.setTitle("Tilki");
        FileChooserFrame.setMinimumSize(new java.awt.Dimension(500, 500));

        jFileChooser1.setDragEnabled(true);
        jFileChooser1.setFocusCycleRoot(true);
        jFileChooser1.setMultiSelectionEnabled(true);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        FileChooserFrame.getContentPane().add(jFileChooser1, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Tilki");
        setMinimumSize(new java.awt.Dimension(630, 460));
        setPreferredSize(new java.awt.Dimension(630, 460));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        GirisEkrani.setFont(GirisEkrani.getFont());
        GirisEkrani.setMaximumSize(new java.awt.Dimension(9999, 4819));
        GirisEkrani.setMinimumSize(new java.awt.Dimension(0, 0));
        GirisEkrani.setPreferredSize(new java.awt.Dimension(630, 460));

        SolPanel.setPreferredSize(new java.awt.Dimension(297, 471));

        jLabel1.setText("Numara");

        jLabel3.setText("Soyad");

        jLabel7.setText("Ad");

        surnameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                surnameTextFieldKeyPressed(evt);
            }
        });

        nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextFieldKeyPressed(evt);
            }
        });

        idTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTextFieldKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idTextFieldKeyPressed(evt);
            }
        });

        loginButton.setText("Giri\u015F Yap");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });

        loginLabel.setForeground(new java.awt.Color(225, 6, 1));
        loginLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLabel.setPreferredSize(new java.awt.Dimension(259, 49));
        loginLabel.setVisible(true);

        jLabel4.setText("<html>S\u0131nava ba\u015Flamak i\u00E7in l\u00FCtfen gerekli bilgileri<br> doldurun ve s\u0131nav\u0131n\u0131z\u0131 se\u00E7in.<html/>\n");

        keyField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyFieldKeyPressed(evt);
            }
        });

        keyLabel.setText("\u015Eifre");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel5.setText("\u00D6\u011Frenci");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel8.setText("G\u00F6zetmen");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel16.setText("L\u00FCtfen bir s\u0131nav se\u00E7iniz.");

        jLabel10.setText("S\u0131nav");

        javax.swing.GroupLayout SolPanelLayout = new javax.swing.GroupLayout(SolPanel);
        SolPanel.setLayout(SolPanelLayout);
        SolPanelLayout.setHorizontalGroup(
            SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SolPanelLayout.createSequentialGroup()
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SolPanelLayout.createSequentialGroup()
                        .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SolPanelLayout.createSequentialGroup()
                                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator3)
                                    .addComponent(jSeparator5)
                                    .addComponent(jLabel10))
                                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(SolPanelLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSeparator2))
                                    .addGroup(SolPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(SolPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)
                                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(keyLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(SolPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(SolPanelLayout.createSequentialGroup()
                                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        SolPanelLayout.setVerticalGroup(
            SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SolPanelLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SolPanelLayout.createSequentialGroup()
                        .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SolPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SolPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SolPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SolPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SolPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SagPanel.setPreferredSize(new java.awt.Dimension(303, 459));

        jList1.setPreferredSize(new java.awt.Dimension(265, 130));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        yenileButton.setText("Yenile");
        yenileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yenileButtonMouseClicked(evt);
            }
        });

        jLabel6.setText("S\u0131navlar");

        durumLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        durumLabel.setText("Durum");
        durumLabel.setVisible(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setFocusable(false);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel11.setText("A\u00E7\u0131klamalar");

        javax.swing.GroupLayout SagPanelLayout = new javax.swing.GroupLayout(SagPanel);
        SagPanel.setLayout(SagPanelLayout);
        SagPanelLayout.setHorizontalGroup(
            SagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SagPanelLayout.createSequentialGroup()
                .addGroup(SagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addGroup(SagPanelLayout.createSequentialGroup()
                            .addComponent(yenileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(durumLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(SagPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel11))
                    .addGroup(SagPanelLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SagPanelLayout.setVerticalGroup(
            SagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SagPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yenileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durumLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 472));

        javax.swing.GroupLayout GirisEkraniLayout = new javax.swing.GroupLayout(GirisEkrani);
        GirisEkrani.setLayout(GirisEkraniLayout);
        GirisEkraniLayout.setHorizontalGroup(
            GirisEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GirisEkraniLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SolPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SagPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        GirisEkraniLayout.setVerticalGroup(
            GirisEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GirisEkraniLayout.createSequentialGroup()
                .addComponent(SagPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(GirisEkraniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GirisEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GirisEkraniLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addComponent(SolPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(GirisEkrani, "card2");

        VideoKayitEkrani.setPreferredSize(new java.awt.Dimension(558, 466));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Zaman");

        jScrollPane3.setViewportView(jList2);

        jButton3.setText("G\u00F6zat...");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton7.setText("S\u0131nav\u0131 Bitir");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton4.setText("Se\u00E7ili Dosyalar\u0131 Sil");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(8);
        jTextArea2.setRows(5);
        jTextArea2.setText("\n\n\t                       Dosyalar\u0131\n\t                 S\u00FCr\u00FCkleyebilirsiniz.");
        jTextArea2.setAutoscrolls(false);
        jTextArea2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextArea2.setFocusable(false);

        jLabel14.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel14.setText("Ge\u00E7en S\u00FCre");

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        jLabel15.setText("<html>S\u0131nav\u0131 bitirmek i\u00E7in g\u00F6ndermek istedi\u011Finiz dosyalar\u0131 G\u00F6zat butonunu kullanarak ya da <br>s\u00FCr\u00FCkleyerek se\u00E7in ve S\u0131nav\u0131 Bitir tu\u015Funa bas\u0131n.</html>");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jCheckBox1.setText("S\u0131nav\u0131 bitirmeye haz\u0131r\u0131m");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VideoKayitEkraniLayout = new javax.swing.GroupLayout(VideoKayitEkrani);
        VideoKayitEkrani.setLayout(VideoKayitEkraniLayout);
        VideoKayitEkraniLayout.setHorizontalGroup(
            VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VideoKayitEkraniLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(VideoKayitEkraniLayout.createSequentialGroup()
                        .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextArea2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VideoKayitEkraniLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VideoKayitEkraniLayout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(72, 72, 72)))))))
                .addContainerGap())
        );
        VideoKayitEkraniLayout.setVerticalGroup(
            VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VideoKayitEkraniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(VideoKayitEkraniLayout.createSequentialGroup()
                        .addGroup(VideoKayitEkraniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jTextArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VideoKayitEkraniLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(VideoKayitEkrani, "card3");
        VideoKayitEkrani.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
        // TODO add your handling code here:
        name = nameTextField.getText();
        surname = surnameTextField.getText();
        number = idTextField.getText();
        String className = jLabel16.getText();
        instructorKey = new String(keyField.getPassword());

        if(!(name.isEmpty()) && !(surname.isEmpty())
           && !(number.isEmpty()) && !(className.equals(
                                       "L\u00FCtfen bir s\u0131nav se\u00E7iniz.")) && !instructorKey.
                isEmpty()) {
            int status = 4;
            try {
                status = fcu.verifyInstructorKey(name, surname, number,
                                                 className, instructorKey);
                if(status == 2)
                    loginLabel.setText(
                            "<html>\u015Eifre kabul edilmedi, ve kayda ge\u00E7ildi.<br>"
                            + "L\u00FCtfen tekrar deneyiniz.</html>");
                else if(status == 1) {
                    GirisEkrani.setVisible(false);
                    //GozetmenKodu.setVisible(false);
                    VideoKayitEkrani.setVisible(true);
                    cam = new CaptureDesktop();
                    cam.StartCaptureDesktop(idTextField.getText(),
                                            surnameTextField.
                                            getText().charAt(0) + nameTextField.
                                            getText());
                    jTextArea2.setDropTarget(new DropTarget() {
                        public synchronized void drop(
                                DropTargetDropEvent evt) {
                            try {
                                evt.acceptDrop(DnDConstants.ACTION_COPY);
                                List<File> droppedFiles = (List<File>) evt.
                                        getTransferable().getTransferData(
                                                DataFlavor.javaFileListFlavor);
                                ListModel<String> lm = jList2.getModel();
                                DefaultListModel dlm = new DefaultListModel();
                                for(File f : droppedFiles)
                                    if(f.isFile() && !dlm.contains(f.
                                            getAbsolutePath()))
                                        dlm.addElement(f.getAbsolutePath());
                                for(int i = 0; i < lm.getSize(); i++) {
                                    String temp = lm.getElementAt(i);
                                    if(!dlm.contains(temp))
                                        dlm.addElement(temp);
                                }
                                jList2.setModel(dlm);
                            }catch(Exception ex) {
                                try {
                                    PrintWriter pw = new PrintWriter(
                                            new FileOutputStream(
                                                    "error.log", true));
                                    ex.getCause().printStackTrace(pw);
                                }catch(IOException ex1) {
                                }
                            }
                        }
                    });
                    timeAtStart = System.currentTimeMillis();
                    updatingTime = new tempThread();
                    updatingTime.start();
                }else
                    loginLabel.setText("Bilinmeyen hata.");
            }catch(IOException ex) {
                durumLabel.setText("Ba\u011Flanamad\u0131");
                durumLabel.setForeground(Color.red);
                durumLabel.setVisible(true);
                loginLabel.setText("Sunucuya eri\u015Filemiyor.");
                loginLabel.setVisible(true);
                examList = null;
                jList1.setModel(new ExamListModel(examList));
                jTextArea1.setText("");
            }
            if(status == 0) {
                loginLabel.setText("Serverda dosya eksik!");
                loginLabel.setVisible(true);
                examList = null;
                jTextArea1.setText("");
                jList1.setModel(new ExamListModel(examList));
            }else if(status == 4) {
                durumLabel.setText("Ba\u011Flanamad\u0131");
                durumLabel.setForeground(Color.red);
                durumLabel.setVisible(true);
                loginLabel.setText("Sunucuya eri\u015Filemiyor.");
                loginLabel.setVisible(true);
                examList = null;
                jTextArea1.setText("");
                jList1.setModel(new ExamListModel(examList));
            }
        }else if(name.isEmpty()) {
            loginLabel.setText("Ad k\u0131sm\u0131 eksik.");
            loginLabel.setVisible(true);
        }else if(surname.isEmpty()) {
            loginLabel.setText("Soyad k\u0131sm\u0131 eksik.");
            loginLabel.setVisible(true);
        }else if(number.isEmpty()) {
            loginLabel.setText("Numara k\u0131sm\u0131 eksik.");
            loginLabel.setVisible(true);
        }else if(className.equals("L\u00FCtfen bir s\u0131nav se\u00E7iniz.")) {
            loginLabel.setText("Yandaki listeden s\u0131nav se\u00E7iniz.");
            loginLabel.setVisible(true);
            jLabel16.setText("L\u00FCtfen bir s\u0131nav se\u00E7iniz.");
        }else if(instructorKey.isEmpty()) {
            loginLabel.setText("G\u00F6zetmen \u015Fifresi eksik.");
            loginLabel.setVisible(true);
        }else
            loginLabel.setVisible(false);
    }//GEN-LAST:event_loginButtonMouseClicked

    private void yenileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yenileButtonMouseClicked
        // TODO add your handling code here:
        try {
            examList = fcu.availableExams();
            durumLabel.setEnabled(true);
            durumLabel.setText("Ba\u011Fland\u0131");
            durumLabel.setForeground(c);
        }catch(IOException e) {
            examList = null;
            durumLabel.setText("Ba\u011Flanamad\u0131");
            durumLabel.setForeground(Color.red);
            durumLabel.setVisible(true);
        }catch(ClassNotFoundException e) {
            examList = null;
            durumLabel.setText("Eksik dosya.");
            durumLabel.setForeground(Color.red);
            durumLabel.setVisible(true);
        }
        jList1.setModel(new ExamListModel(examList));
        jTextArea1.setText("");
    }//GEN-LAST:event_yenileButtonMouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        int location = jList1.locationToIndex(evt.getPoint());
        if(examList != null && location >= 0) {
            jTextArea1.setText(examList[location].getDescription());
            jLabel16.setText(examList[location].getName());
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        FileChooserFrame.setVisible(true);
    }//GEN-LAST:event_jButton3MouseClicked
    private tempThread updatingTime;

    private class tempThread extends Thread implements Runnable {
        private volatile boolean running = true;

        public void terminate() {
            running = false;
        }

        @Override
        public void run() {
            running = true;
            try {
                while(running)
                    updateTime();
            }catch(Exception ex) {
                try {
                    PrintWriter pw = new PrintWriter(new FileOutputStream(
                            "error.log", true));
                    ex.getCause().printStackTrace(pw);
                }catch(IOException ex1) {
                }
            }
        }
    }

    private void updateTime() {
        try {
            //geting Time in desire format
            jLabel9.setText(getTimeElapsed());
            //Thread sleeping for 1 sec
            Thread.currentThread().sleep(1000);
        }catch(Exception ex) {
            try {
                PrintWriter pw = new PrintWriter(new FileOutputStream(
                        "error.log", true));
                ex.getCause().printStackTrace(pw);
            }catch(IOException ex1) {
            }
        }
    }
    private long timeAtStart = 0;

    private String getTimeElapsed() {
        long elapsedTime = System.currentTimeMillis() - timeAtStart;
        elapsedTime = elapsedTime / 1000;

        String seconds = Integer.toString((int) (elapsedTime % 60));
        String minutes = Integer.toString((int) ((elapsedTime % 3600) / 60));
        String hours = Integer.toString((int) (elapsedTime / 3600));

        if(seconds.length() < 2)
            seconds = "0" + seconds;

        if(minutes.length() < 2)
            minutes = "0" + minutes;

        if(hours.length() < 2)
            hours = "0" + hours;

        return hours + ":" + minutes + ":" + seconds;
    }
    private String zipName;
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        FileChooserFrame.setVisible(false);
        ListModel<String> lm = jList2.getModel();
        List<String> list = jList2.getSelectedValuesList();
        DefaultListModel dlm = new DefaultListModel();
        for(int i = 0; i < lm.getSize(); i++) {
            String a = lm.getElementAt(i);
            if(!list.contains(a))
                dlm.addElement(a);
        }
        jList2.setModel(dlm);
    }//GEN-LAST:event_jButton4MouseClicked

    private void idTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyPressed
        MouseEvent temp;
        temp = new MouseEvent(SolPanel, WIDTH, timeAtStart, ICONIFIED, WIDTH,
                              WIDTH, HEIGHT, rootPaneCheckingEnabled);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loginButtonMouseClicked(temp);// TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldKeyPressed

    private void nameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyPressed
        // TODO add your handling code here:
        MouseEvent temp;
        temp = new MouseEvent(SolPanel, WIDTH, timeAtStart, ICONIFIED, WIDTH,
                              WIDTH, HEIGHT, rootPaneCheckingEnabled);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loginButtonMouseClicked(temp);
    }//GEN-LAST:event_nameTextFieldKeyPressed

    private void surnameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surnameTextFieldKeyPressed
        MouseEvent temp;
        temp = new MouseEvent(SolPanel, WIDTH, timeAtStart, ICONIFIED, WIDTH,
                              WIDTH, HEIGHT, rootPaneCheckingEnabled);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loginButtonMouseClicked(temp);        // TODO add your handling code here:
    }//GEN-LAST:event_surnameTextFieldKeyPressed

    private void idTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() > '9' || evt.getKeyChar() < '0')
            evt.consume();
    }//GEN-LAST:event_idTextFieldKeyTyped

    private void keyFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyFieldKeyPressed
        MouseEvent temp;
        temp = new MouseEvent(SolPanel, WIDTH, timeAtStart, ICONIFIED, WIDTH,
                              WIDTH, HEIGHT, rootPaneCheckingEnabled);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            loginButtonMouseClicked(temp);        // TODO add your handling code here:
    }//GEN-LAST:event_keyFieldKeyPressed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        String command = evt.getActionCommand();
        if(command.equalsIgnoreCase("ApproveSelection")) {
            File[] selectedFiles = jFileChooser1.getSelectedFiles();
            ListModel<String> lm = jList2.getModel();
            DefaultListModel dlm = new DefaultListModel();
            for(File f : selectedFiles)
                if(!dlm.contains(f.getAbsolutePath()))
                    dlm.addElement(f.getAbsolutePath());
            for(int i = 0; i < lm.getSize(); i++) {
                String element = lm.getElementAt(i);
                if(!dlm.contains(element))
                    dlm.addElement(element);
            }
            jList2.setModel(dlm);
        }
        jFileChooser1.setSelectedFile(new File(""));
        FileChooserFrame.dispose();
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected())
            jButton7.setEnabled(true);
        else
            jButton7.setEnabled(false);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(jCheckBox1.isSelected()) {
            FileChooserFrame.setVisible(false);
            if(cam.status()) {
                cam.StopCaptureDesktop();
                ArrayList<File> filesThatWillUpload = new ArrayList();
                ListModel<String> lm = jList2.getModel();

                String target_file = cam.getPersonName() + "." + cam.getFormat(); // fileThatYouWantToFilter
                File target_file_object = new File(target_file);
                if(target_file_object.exists()) {
                    filesThatWillUpload.add(new File(target_file));
                    for(int i = 0; i < 100; i++) {
                        target_file_object = new File(i + "_" + target_file);
                        if(target_file_object.exists())
                            filesThatWillUpload.add(new File(
                                    i + "_" + target_file));
                    }
                }
                ArrayList<File> codeFiles = new ArrayList<File>();
                for(int i = 0; i < lm.getSize(); i++)
                    codeFiles.add(new File(lm.getElementAt(i)));
                updatingTime.terminate();
                File[] temp = new File[filesThatWillUpload.size()];
                File[] temp2 = new File[codeFiles.size()];
                zau = new ZipAndUpload(codeFiles.toArray(temp2),
                                       filesThatWillUpload.toArray(
                                               temp), number,
                                       jLabel16.getText(),
                                       instructorKey);
                zau.setVisible(true);
                for(Component component : jList2.getComponents())
                    component.setEnabled(false);
                jList2.setEnabled(false);
                for(Component component : VideoKayitEkrani.getComponents())
                    component.setEnabled(false);
                VideoKayitEkrani.setEnabled(false);
                this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private static class ShutDownHook extends Thread {
        @Override
        public void run() {
            try {
                BufferedReader fileIn;
                File logFile = zau.getLogFile();
                if(logFile.exists() && !logFile.isDirectory())
                    fileIn = new BufferedReader(new FileReader(logFile));
                else
                    return;
                Socket socket = new Socket("localhost", 50101);
                socket.setSoTimeout(1000);
                DataOutputStream socketOut = new DataOutputStream(socket.
                        getOutputStream());
                DataInputStream socketIn = new DataInputStream(socket.
                        getInputStream());
                socketOut.writeUTF("Sending error logs.");
                String line;
                while((line = fileIn.readLine()) != null)
                    socketOut.writeUTF(line);
                socketIn.readUTF();
                fileIn.close();
                socket.close();
            }catch(Exception ex) {
            }
        }

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
            ShutDownHook hook = new ShutDownHook();
            Runtime.getRuntime().addShutdownHook(hook);

            try {

                UIManager.setLookAndFeel(
                        "com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
            }catch(Exception ex) {
                try {
                    PrintWriter pw = new PrintWriter(new FileOutputStream(
                            "error.log", true));
                    ex.getCause().printStackTrace(pw);
                }catch(IOException ex1) {
                }
            }

            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new MainClient().setVisible(true);
                }
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame FileChooserFrame;
    private javax.swing.JPanel GirisEkrani;
    private javax.swing.JPanel SagPanel;
    private javax.swing.JPanel SolPanel;
    private javax.swing.JPanel VideoKayitEkrani;
    private javax.swing.JLabel durumLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JPasswordField keyField;
    private javax.swing.JLabel keyLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JButton yenileButton;
    // End of variables declaration//GEN-END:variables

}
